
= Web サイトの要件定義と要素整理をしてみよう


この章では、Web サイトを作る際におこなう、要件定義と要素整理について解説します。


== 要件定義とは


Web サイト制作が始まる前に、要件定義という工程をおこないます。そこでは、以下の内容を要件定義します。

 * どんな Web サイトを作るか
 * どんな機能が必要か


それぞれ、大まかではなく細かく書いたほうが良いです。


== なぜ要件定義をするのか


最初に要件定義をすることで、企画書の変更頻度が減ります。これにより、作業の巻き戻りを最小限に抑えることができます。



これにより「あれも入れたい」といった、思いつきのアイディアに影響されず、一気に Web サイトを作ることが可能です。


== 今回の要件定義について


では実際に要件定義をしていきます。例として、「ラブライブ参加者募集サイト」で説明します。



まず、どんな Web サイトを作るかというところから始めます。今回は「ラブライブ」という、アイドルコンテストの募集サイトを作ります。



手順としては、まずはターゲットユーザを定義します。そして、ターゲットユーザにどんな体験を与えたいのか考えます。



今回は、工数・スケジュールを考えた結果、トップページとライブ中継ページの 2 ページのみ作ることにしました。このような判断も、要件定義の一部です。


== 要素とは


Web サイト内にある、ボタンや画像、テキストなど、様々な情報表示・動作するものを、Web サイトの「要素」と呼びます。



どの要素をどの位置へ置くかは、設計者が最も合理的だと考えた場所になります。そのため合理的なのか判断するためにターゲットユーザの分析が必要となります。



ユーザが「最も合理的」と感じる方向に向かって、さまざまなことを考え、設計するべきです。例えば、以下のことが考えられます。

 * ターゲットユーザがよく使いそうなボタン・機能をクリックしやすいところへ置く
 * ユーザへ一番伝えたいことを見やすいところに置く

== 今回の要素について整理


アニメのキャプチャから、Web サイトを構成する要素について分析してみます。



まず、グローバルナビゲーションに表示されている内容は以下の通りとなります。

 * TOP
 * LIVE STAGE
 * OUTLINE
 * SCHEDULE
 * SPECIAL
 * LINK
 * FAQ


1 つずつ見ていきましょう。


=== TOP


字面通り Web サイトのトップページを意味します。ユーザが Web サイトを見ている時、どのページにいたとしても 1 クリックでトップページへ戻れます。



Web サイトを見る時の習慣に準じて、一番見やすい左上へ置いたのは、理由があります。この Web サイトのターゲットユーザにとって一番大事、もしくは一番クリックしてほしいという理由があります。



また、トップページを構成する要素は、グローバルナビゲーション以外に、各ページで使われる共通要素があります。



ヘッダ部分には、ロゴ・メールマガジン・シェア・ツイート・お問い合わせがあります。フッタ部分には利用規約や権利情報が掲載されています。


=== LIVE STAGE


ラブライブの状況をネットで生中継するページだと思われます。



参加するアイドルグループが見る、アウトラインやスケジュールより左に位置しています。これは一体どういうことでしょうか？



これは、参加するアイドルグループの他に、ライブをネット上で見るファンも大事という考えがあると思います。



アニメのキャプチャからページ内容を推測すると、以下の要素で構成されているように見えます。

 * 映像タイトル
 * 出演者
 * 映像生中継
 * 映像情報
 * ユーザコメント
 * 投票
 * 広告スペース


さてここで、最初に書いた要件定義を思い出しましょう。今回は「工数・スケジュールを考えた結果、トップページとライブ中継ページの 2 ページのみ作る」ということでした。



つまり他のページについて、要素整理は必要なく、要素整理をここで終わらせることができます。



今回、どこまで資料が必要なのかは、要件定義の段階で明確にしていました。そのため、余計な作業はなくなり、無駄な時間を過ごすことがなくなります。



ここからは今回の Web サイトについて、推測を書いていきます。よければ参考にしてください。


=== OUTLINE


おそらく、コンテスト概要や募集要項などの内容が記載されていると思われます。


=== SCHEDULE


おそらく、コンテスト選考スケジュールや催行スケジュールなどの内容が記載されていると思われます。


=== SPECIAL


おそらく、歴代優勝者コメントやコラボキャンペーンなどの情報が記載されていると思われます。これはテキストのみだと推測がしにくいです。


=== LINK


関連法人、個人の公式 Web サイトなどが掲載されていると思われます。


=== FAQ


よくある質問やお問い合わせなどが掲載されていると思われます。



以上の要件定義、要素整理に基づき、サイトマップと仕様書を作成していきます。



//image[01][要素整理]{
//}



== サイトマップの作成


Web サイトのページ数とページ階層を表示する図がサイトマップです。



サイトマップは、Web サイトが何ページあるかということや、ページとページの関連性をひと目で見られます。それにより、工数も推測できます。



サイトマップを用意するとメリットが二つあります。一つ目に、ページ数が多い Web サイトの場合は制作スピードを上げられます。二つ目に、ページ漏れのリスクも減らすことができます。


== サイトマップの書き方


個人的に推奨するツールは Excel です。



画像を作るイメージから PowerPoint が良いと思う方もいるかもしれません。しかし、実はセル結合や枠線を描画して作るほうが楽です。



Excel を使えない場合は、Google Drive のスプレッドシートも最低限な機能が揃っているため、おすすめです。



作るときの心がけとして、階層を意識し、外部リンクは明確に表示するよう作成するのがおすすめです。


== 今回のサイトマップについて


第一章で書いた「要件整理」をきちんとまとめれば、サイトマップはほぼ考えずに作れると思います。



今回作るのはトップとライブステージの2ページです。また、ライブステージ内に、ポップアップ画面を設計しました。一番上層のページをトップとして、下層にライブステージを書きます。他に外部リンクである SNS ボタンをつけて完成です。



今回は極めて簡単な内容のため、これで終わりです。本来は各下層ページにさらなる下層ページがある、Web サイトのあらゆる表示可能なページ (ポップアップやエラーページなど) を全部作らないといけません。



そのため、Excel に起こす前の段階で、紙へ下書きを書くことをおすすめします。



//image[02][サイトマップ]{
//}



== ワイヤーフレームと仕様書の作成


ワイヤーフレームは Web サイトの各ページごとにある、要素の種類・数・位置を示すものです。



仕様書は、それぞれの要素を具体的に何をどう表示するか、動作の演出などを明記するものです。



場合によっては、両方をまとめて書いたり、分けて書くこともあります。Web サイトの内容が豊かであればあるほど、仕様書の内容は多くなるので、分けて書くことをおすすめします。



1 ページごとにワイヤーフレームと仕様書は必要です。そのため、ページ数が多ければ多いほど、ワイヤーフレームと仕様書のページ数も多くなります。


== ワイヤーフレームと仕様書の心得

=== ツール


ワイヤーフレームは PowerPoint と Excel のどちらか好きなほうを使うのが良いです。仕様書は Excel をおすすめします。


=== 要素の分類


大枠は 3 種類に分けられます。それは、画像・テキスト・ボタンとなります。さらに動作の要素を入れると、スクロール・ポップアップなどがあります。色もしくは形で分けるように書くことをおすすめします。


=== 余計な情報を入れない


ワイヤーフレームはあくまで要素がページ内にあることを示すための資料です。そのため、色などはなるべく入れないのが良いです。



なぜかというと、デザイナはワイヤーフレームを参考資料にして、グラフィックと UI の制作をします。そのため、余計な情報があると資料は分かりづらくなり、混乱を招くことにあります。



どんなグラフィックや UI の方向性にするかは、アートディレクタの仕事です。そのため、企画資料としては見やすいようにすることが最優先です。


=== 仕様書は箇条書きにする


それぞれの要素・動作に対して、箇条書きする必要があります。仕様書を見るエンジニアにとって、不明な点がない状態でコーディングできるよう目指します。


== 今回のワイヤーフレームと仕様書について


要件定義の段階で分かりましたが、今回はページ数・要素共に少ないです。



そのため、ワイヤーフレームと仕様書をまとめて書きました。1 ページずつ見ていきましょう。


=== トップページのワイヤーフレーム


共通のヘッダ・グローバルナビゲーション・フッタ以外、アニメ内では、画像表示のみに見えます。



画像の表示方法はカルーセルということが分かります。しかし、下にあるドットがアニメのキャプチャを見るとフッタ内にあります。これは、現実だと採用される可能性が極めて低いものです。



ライブステージもドットがフッタ内にあります。しかし、映像を見るページでこういった表示は普通しません。



そのため考えた結果として、画像のカルーセル表示だけにしました。



推測した結果、トップページの訴求は「コンテストの盛り上がり」と「歴代受賞者の宣伝」で、華やかな画像をいっぱい見れる設計だと思われます。



//image[03][トップページのワイヤーフレーム]{
//}



=== ライブステージのワイヤーフレーム


共通要素を除くと、「ニコニコ動画」の仕様に似ています。



生中継はもちろん映像が中心で、ほかの機能は映像と関連するものになっていると想定しています。さらに、映像エリアの隣に広告スペースが見えます。おそらくここに広告が掲載されているでしょう。



また本来は「ニコニコ動画」のようなコメント機能があると思われます。今回は工数が足りないため、少し改造し SNS コメントという似ている機能へ変更しました。「何かをコメントする」体験は変えず、より工数の少ないものに変えられたと思います。



//image[04][ライブステージのワイヤーフレーム]{
//}



=== ほかポップアップ


サイトマップのところで書きましたが、エラーページも想定しました。



ただしエラーが発生しない限り、エラーページは見れません。そのため、検証がほとんどできないと思われるため、ここではエラーページの代わりに「まだ作ってない」というポップアップを用意しました。



また、映像コメントの体験を与えるために SNS コメントポップアップと、投票結果を再現するための結果ポップアップを作りました。



上記ポップアップは、ページとして存在しません。そのため、サイトマップでは仕様をページと区別して反映しました。



//image[05][まだ作っていないというポップアップのワイヤーフレーム]{
//}

//image[06][SNS のコメントポップアップのワイヤーフレーム]{
//}

//image[07][投票結果を再現するためのワイヤーフレーム]{
//}


